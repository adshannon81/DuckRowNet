@model DuckRowNet.Helpers.Object.PersonDetails
@using DuckRowNet.Helpers;
@{
    ViewBag.Title = "Client";
    Layout = "~/Views/Shared/_Layout.cshtml";

    DAL db = new DAL();

    List<SelectListItem> countyList = new List<SelectListItem>();
    foreach (var county in @db.listCounties("IE"))
    {
        countyList.Add(new SelectListItem { Value = county.Name, Text = county.Name });
    } 
}


    <div>
        <div class="main-view">

            @if (!ViewBag.IsValid)
            {
                <p class="message error">
                    @ViewBag.errorMessage
                </p>
            }
            @if (ViewBag.successMessage != "")
            {
                <p class="message-success">
                    @ViewBag.successMessage
                </p>
            }

            @using (Html.BeginForm("Client", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-main">


                    <div style="text-align:center;">
                        <h3>Client Details</h3>
                    </div>

                    <br />
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor( m => m.FirstName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Address1, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Address1, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Address2, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Address2, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.State, "County", new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.State, countyList, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Postcode, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.Postcode, new { @class = "form-control" })
                        </div>
                    </div>
                    <br />
                    @if (Model.Type != DuckRowNet.Helpers.Functions.PersonType.User )
                    {
                        <div class="row">
                            <span class="label"></span>
                            <span class="formTextBox">
                                <input type="submit" class="button" id="udpateClient" name="buttonClick" value="Update" title="updateClient" />
                            </span>
                        </div>

                        <div class="row"> <br /></div>

                        <div class="row">
                            <span class="label"></span>
                            <span class="formTextBox">
                                <input type="submit" class="button" id="deleteClient" name="buttonClick" value="Delete" title="deleteClient" />
                            </span>
                        </div>

                        <div class="row"> <br /></div>
                    }



                </div>
                @Html.HiddenFor(m => m.ID) ;
                <input type="text" id="urlReferrer" name="urlReferrer" value="@ViewBag.urlReferrer" style="visibility:hidden;display:none;" />




            }
        </div>

    </div>
    
